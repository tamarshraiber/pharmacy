// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data;

#nullable disable

namespace Project.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250325231808_26-03-2025_2")]
    partial class _26032025_2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Project.Core.Model.PatientsQueue", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<long>("pharmacyId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("pharmacyId");

                    b.ToTable("patientsQueues");
                });

            modelBuilder.Entity("Project.Core.Model.Pharmacist", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("pharmacyId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("pharmacyId");

                    b.ToTable("pharmacists");
                });

            modelBuilder.Entity("Project.Core.Model.Pharmacy", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<int>("addCounter")
                        .HasColumnType("int");

                    b.Property<string>("manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pharmacyPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("removeCounter")
                        .HasColumnType("int");

                    b.Property<int>("specialsAddCounter")
                        .HasColumnType("int");

                    b.Property<int>("specialsRemoveCounter")
                        .HasColumnType("int");

                    b.Property<int>("stationCount")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("pharmacies");
                });

            modelBuilder.Entity("Project.Core.Model.SpecialsQueue", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<int>("number")
                        .HasColumnType("int");

                    b.Property<long>("pharmacyId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("pharmacyId");

                    b.ToTable("specialsQueues");
                });

            modelBuilder.Entity("Project.Core.Model.Station", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("id"), 1L, 1);

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.Property<long?>("pharmacistId")
                        .HasColumnType("bigint");

                    b.Property<long>("pharmacyId")
                        .HasColumnType("bigint");

                    b.HasKey("id");

                    b.HasIndex("pharmacyId");

                    b.ToTable("stations");
                });

            modelBuilder.Entity("Project.Core.Model.PatientsQueue", b =>
                {
                    b.HasOne("Project.Core.Model.Pharmacy", "pharmacy")
                        .WithMany("patientsQueue")
                        .HasForeignKey("pharmacyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pharmacy");
                });

            modelBuilder.Entity("Project.Core.Model.Pharmacist", b =>
                {
                    b.HasOne("Project.Core.Model.Pharmacy", "pharmacy")
                        .WithMany("pharmacists")
                        .HasForeignKey("pharmacyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pharmacy");
                });

            modelBuilder.Entity("Project.Core.Model.SpecialsQueue", b =>
                {
                    b.HasOne("Project.Core.Model.Pharmacy", "pharmacy")
                        .WithMany("specialsQueue")
                        .HasForeignKey("pharmacyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pharmacy");
                });

            modelBuilder.Entity("Project.Core.Model.Station", b =>
                {
                    b.HasOne("Project.Core.Model.Pharmacy", "pharmacy")
                        .WithMany("stations")
                        .HasForeignKey("pharmacyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pharmacy");
                });

            modelBuilder.Entity("Project.Core.Model.Pharmacy", b =>
                {
                    b.Navigation("patientsQueue");

                    b.Navigation("pharmacists");

                    b.Navigation("specialsQueue");

                    b.Navigation("stations");
                });
#pragma warning restore 612, 618
        }
    }
}
